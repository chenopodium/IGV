/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.iontorrent.karyo.filter;

import com.iontorrent.karyo.data.KaryoTrack;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionListener;

/**
 *
 * @author Chantal
 */
public class FilterListItemPanel extends javax.swing.JPanel {

    ActionListener listener;
    KaryoFilter filter;
    int count;
    int total;
    KaryoTrack track;
    Font font;
    boolean doEvents;
    int notapplied;
    /**
     * Creates new form FilterListItemPanel
     */
    public FilterListItemPanel(KaryoTrack track, KaryoFilter filter,int notapplied, int count, int total, ActionListener listener) {
        initComponents();
        this.filter = filter;
        this.track = track;
        this.count = count;
        this.total = total;
        this.notapplied = notapplied;
       
        this.listener = listener;
        font = this.lblInfo.getFont();
        update();
    }

    private void update() {
        p(" Update: filter is enabled? "+ filter.isEnabled());
         doEvents = false;
        this.boxEnabled.setSelected(filter.isEnabled());
        doEvents = true;
        if (filter.isEnabled()) {
            this.lblName.setForeground(Color.blue.darker());
            //this.lblName.setFont(new Font(font.getFamily(), Font.BOLD, font.getSize()));
            this.lblInfo.setForeground(Color.gray);
        }
        else {
         //   this.lblName.setFont(new Font(font.getFamily(), Font.PLAIN, font.getSize()));
            this.lblName.setForeground(Color.gray);
            this.lblInfo.setForeground(Color.lightGray);
        }
        
        String text = track.getShortName()+": "+track.getTrackDisplayName();               
        setTitle(text);
        text = filter.toHtml()+"<br>(<b>"+count+"</b> of "+total+")";
        this.lblName.setToolTipText("Sample feature: "+track.getSampleafeture().toString());
        if (notapplied > 0) {
            this.lblInfo.setToolTipText(notapplied+" feature(s) could not be filtered this way and are not shown");
        }
        else {
            this.lblInfo.setToolTipText("");
        }
        setInfo("<html>"+text+"</html>");             
    }
    public void setInfo(String s) {
        this.lblInfo.setText(s);
    }

    public void setTitle(String s) {
        this.lblName.setText(s);
    }

    public KaryoFilter getFilter() {
        return filter;
    }
    public boolean isFilterEnabled() {
        return this.boxEnabled.isSelected();
    }

    private void p(String s) {
        System.out.println("FilterListItemPanel: " + s);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boxEnabled = new javax.swing.JCheckBox();
        lblName = new javax.swing.JLabel();
        lblInfo = new javax.swing.JLabel();

        boxEnabled.setText(org.openide.util.NbBundle.getMessage(FilterListItemPanel.class, "FilterListItemPanel.boxEnabled.text")); // NOI18N
        boxEnabled.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                boxEnabledStateChanged(evt);
            }
        });
        boxEnabled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxEnabledActionPerformed(evt);
            }
        });

        lblName.setText(org.openide.util.NbBundle.getMessage(FilterListItemPanel.class, "FilterListItemPanel.lblName.text")); // NOI18N

        lblInfo.setText(org.openide.util.NbBundle.getMessage(FilterListItemPanel.class, "FilterListItemPanel.lblInfo.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(boxEnabled)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                    .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(boxEnabled, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void boxEnabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxEnabledActionPerformed
        if (!doEvents) return;
        p("Filter enable box clicked: "+this.boxEnabled.isSelected());
        filter.setEnabled(this.boxEnabled.isSelected());
        update();
        evt.setSource(this);
        listener.actionPerformed(evt);
        
    }//GEN-LAST:event_boxEnabledActionPerformed

    private void boxEnabledStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_boxEnabledStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_boxEnabledStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox boxEnabled;
    private javax.swing.JLabel lblInfo;
    private javax.swing.JLabel lblName;
    // End of variables declaration//GEN-END:variables
}
