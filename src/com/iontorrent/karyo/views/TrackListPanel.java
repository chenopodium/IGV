/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.iontorrent.karyo.views;

import com.iontorrent.karyo.data.KaryoTrack;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionListener;
import java.awt.event.MouseListener;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.ListCellRenderer;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Chantal Roth
 */
public class TrackListPanel extends javax.swing.JPanel {

    KaryoManager man;
    //  JPanel center;
    KaryoControlPanel control;
    TrackOptionsPanel options;
    KaryoTrack curTrack;
    JList list;

    /**
     * Creates new form TrackListPanel
     */
    public TrackListPanel(KaryoManager man, KaryoControlPanel control) {
        this.man = man;
        initComponents();
        //   center= new JPanel();
        this.control = control;
        int nr = man.getKaryotracks().size();

        // center.setLayout(new GridLayout(nr, 1));
        setLayout(new BorderLayout());

        if (control == null) {
            System.out.println("TrackListPanel:  control is null!");
        }
        DefaultListModel model = new DefaultListModel();
        list = new JList(model);
        list.setPreferredSize(new Dimension(150, 200));
        list.setMinimumSize(new Dimension(150, 200));
        list.setCellRenderer(new PanelCellRenderer());
        //  DefaultListCellRenderer def;
        JPanel pl = new JPanel();
        pl.setBorder(javax.swing.BorderFactory.createTitledBorder(null, org.openide.util.NbBundle.getMessage(SimpleTrackListPanel.class, "SimpleTrackListPanel.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        pl.setLayout(new BorderLayout());
        pl.add("Center", list);
        for (KaryoTrack t : man.getKaryotracks()) {
            p("Creating single track panel for " + t.getTrackDisplayName() + ": visible=" + t.isVisible());
            if (curTrack == null) {
                curTrack = t;
            }
            model.addElement(t);


        }
        if (man.getKaryoTracks().size() > 0) {
            list.setSelectedIndex(0);
        }

        list.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {

                options.updateTrack();
                curTrack = (KaryoTrack) list.getSelectedValue();
                p("Got a list selection event: " + curTrack);
                updateOptions();
            }
        });
        add("Center", pl);
        updateOptions();

    }

    private class PanelCellRenderer implements ListCellRenderer {

        @Override
        public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            KaryoTrack t = (KaryoTrack) value;
            Color bg = Color.white;
            Color fg = Color.black;
            if (isSelected) {
                bg = list.getSelectionBackground();
                fg = list.getSelectionForeground();
            } else {
                bg = list.getBackground();
                fg = list.getForeground();
            }

            SingleTrackPanel pan = new SingleTrackPanel(isSelected, bg, fg, false, t, false, null, null);
            return pan;
        }
    }

    public static void show(final ActionListener listener, KaryoManager manager, KaryoControlPanel control) {
        TrackListPanel tp = new TrackListPanel(manager, control);

        
        int ans = JOptionPane.showConfirmDialog(control, tp, "Track Details",  JOptionPane.OK_OPTION,JOptionPane.INFORMATION_MESSAGE);
        if (ans == JOptionPane.OK_OPTION) {
            // NOW SAVE THE SETTINGS
            
            listener.actionPerformed(null);
         
        }

    }
   

    private void updateOptions() {
        p("Updating options");
        if (options != null) {
            remove(options);
        }
        if (curTrack == null) {
            return;
        }
        options = new TrackOptionsPanel(curTrack);
        add("East", options);
        repaint();
        this.invalidate();
        this.revalidate();
    }

    private void p(String s) {
        System.out.println("TrackListPanel: " + s);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {



        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 181, Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 273, Short.MAX_VALUE));
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
