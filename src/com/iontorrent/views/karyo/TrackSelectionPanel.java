/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.iontorrent.views.karyo;

import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import javax.swing.BoxLayout;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import org.broad.igv.track.FeatureTrack;
import org.broad.igv.track.Track;
import org.broad.igv.track.TrackType;
import org.broad.igv.ui.IGV;


/**
 *
 * @author Chantal Roth
 */
public class TrackSelectionPanel extends javax.swing.JPanel {

    private int nrlisted;
    
    private HashMap<JCheckBox, FeatureTrack> trackmap;
    /**
     * Creates new form TrackSelectionPanel
     */
    public TrackSelectionPanel() {
        initComponents();
     
        setLayout(new BorderLayout());
        add("North", new JLabel("Please pick the tracks you wish to see in the Karyo View"));
        JPanel center = new JPanel();
        center.setLayout(new BoxLayout(center, BoxLayout.Y_AXIS));
            
        Collection<Track> tracks = IGV.getInstance().getAllTracks();
        trackmap = new HashMap<JCheckBox, FeatureTrack>();
        
        for(Track t : tracks) {
             p("Got track: "+t.getName());
            if(t instanceof FeatureTrack) {
                String n = t.getName();
               
                if (n.startsWith("RefSeq")) {
                    // ignore
                }
                else {
                    TrackType type = t.getTrackType();
                    
                    JCheckBox cb = new JCheckBox(t.getName()+", "+type.toString());
                    if (type == TrackType.GENE || type == TrackType.CHIP || type == TrackType.EXPR || type == TrackType.COVERAGE) {
                        cb.setSelected(false);
                        cb.setToolTipText("This type could potentially take long to load");
                        nrlisted++;
                    }
                    else if (n.endsWith(".bam") || n.endsWith(".BAM")) {
                        cb.setSelected(false);
                        if (!t.getResourceLocator().isLocal()) {
                            cb.setEnabled(false);
                            cb.setText("Bam files can be huge, and this one is remote. It could take too long to load the entire file remotely!"
                                    + "<br>You can store it locally first and then load it if you really want to.");
                        }
                        else {
                            nrlisted++;
                            cb.setText("Bam files can be huge, and it could take too long to load the entire file!");
                        }
                    }
                    else {
                        cb.setSelected(true);
                        nrlisted++;
                    }
                    center.add(cb);
                    trackmap.put(cb, (FeatureTrack)t);
                }
            }
        }
        this.add("Center", center);
    }
    public int getNrListedTracks() {
        return nrlisted;
    }
    public int getNrTracks() {
        return trackmap.size();
    }
    private void p(String msg) {
        System.out.println("Trackselectionpanel: "+ msg);
    }
    public ArrayList<FeatureTrack> getSelectedTracks() {
        ArrayList<FeatureTrack> res = new ArrayList<FeatureTrack>();
        Iterator<JCheckBox> it = trackmap.keySet().iterator();
        while (it.hasNext()) {
            JCheckBox ch = it.next();
            if (ch.isSelected()) res.add(trackmap.get(ch));
        }
        return res;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
